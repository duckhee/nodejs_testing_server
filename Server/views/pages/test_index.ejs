<!DOCTYPE html>
<html>

<head>
    <title>welcome Test IOF</title>
    <% include ../partials/stylesheet.ejs %>
    <% include ../partials/header_javascript.ejs %>
    <% include ../partials/weather_config.ejs %>
</head>


<body class="hold-transition skin-blue sidebar-mini">
    <div class="wrapper">
        <header class="main-header">
            <!-- Logo -->
            <a href="/" class="logo">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini"><b>I</b>OF</span>
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg"><b>C &amp; H </b>IOF</span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top">
                <!-- Sidebar toggle button-->
                <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button"> <span class="sr-only">Toggle navigation</span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">
                        <!-- Tasks: style can be found in dropdown.less -->
                    </ul>
                </div>
            </nav>
        </header>
        <!-- Left side column. contains the logo and sidebar -->
        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <!-- Sidebar user panel -->
                <div class="user-panel">
                    <div class="pull-left image">
                        <img src="/static/images/logo_iot.png" class="img-circle" alt="User Image">
                    </div>
                    <div class="pull-left info">
                        
                        <!-- <a href="#"><i class="fa fa-circle text-success"></i> Online</a> -->
                    </div>
                </div>
                <!-- nav item -->
                <% include ../partials/nav_item %>
                <!-- end nav item -->
            </section>
            <!-- /.sidebar -->
        </aside>
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
                <!-- Content Header (Page header) -->
                <section class="content-header">
                    <h1>
                        Show <small>Serial</small>
                    </h1>
                    <ol class="breadcrumb">
                        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
                        <li><i class="ffa fa-dshboard"></i>address</li>
                        <li class="active"><a href="/">serial</a></li>
                    </ol>
                </section>
                <div class="content">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box box-primary">
                                <div class="box-header with-dorder">
                                    <i class="fa fa-fw fa-download"></i>
                                    <h3 class="box-title">Sensor or Picture Down Load</h3>
                                </div>
                                <div class="box-body">
                                <p> click button download.</p>
                                <form action="/process/download_csv?serial_Num=<%=serial_Num%>" method="post">
                                    <button type="submit" class="btn btn-block btn-success" name="sensor_download" id="sensor_download"><i class="fa fa-fw fa-download"></i>Sensor Data Download</button>
                                </form>
                                <form action="/process/download_zip?serial_Num=<%=serial_Num%>" method="post">
                                    <button type="submit" class="btn btn-block btn-danger" name="image_download" id="image_download"><i class="fa fa-fw fa-download"></i>Picture Data Download</button>
                                </form>
                                </div>
                            </div>
                        </div>
                    </div>
                        <!-- download button group -->
                    <div class="row">
                        <!-- <div class="col-xs-12"> -->
                        <div class = "col-md-6">
                            <!-- Line chart -->
                            <div class="box box-primary">
                                <div class="box-header with-border">
                                    <i class="fa fa-bar-chart-o"></i>
                                    <h3 class="box-title">EC Value (dS/m ECe) <%
                                            var d = new Date(createdAt); 
                                            var str = "";
                                            if(createdAt){
                                                str = d.getFullYear() + "-" + (d.getMonth() + 1 ) + "-" + d.getDate() ;
                                            }                                           
                                        %>
                                            </h3><div class="box-tools pull-right"><%= str %></div>     
                                    <!--<button class="pull-right" id="value_download" name="value_download"><i class="fa fa-fw fa-download"></i>download</button>-->
                                </div>
                                <div class="box-body">                                    
                                    <div id="ec-chartLegend" ></div>
                                    <div id="ec-chart" style="height: 300px;"></div>    
                                </div>
                                <!-- /.box-body-->
                            </div>
                            <!-- /.box -->
                        </div>
                        <!-- chart end -->
                        <div class = "col-md-6">
                            <!-- Line chart -->
                            <div class="box box-primary">
                                <div class="box-header with-border">
                                    <i class="fa fa-bar-chart-o"></i>
                                    <h3 class="box-title">Temperature Value (degC) <%
                                            var d = new Date(createdAt); 
                                            var str = "";
                                            if(createdAt){
                                                str = d.getFullYear() + "-" + (d.getMonth() + 1 ) + "-" + d.getDate();
                                            }                                           
                                        %>
                                           </h3><div class="box-tools pull-right"><%= str %></div>                                    
                                    <!-- <button class="pull-right" id="value_download" name="value_download"><i class="fa fa-fw fa-download"></i>download</button> -->
                                </div>

                                <div class="box-body">
                                    <div id="temp-chartLegend" ></div>
                                    <div id="temp-chart" style="height: 300px;"></div>
                                </div>
                                <!-- /.box-body-->
                            </div>
                            <!-- /.box -->
                        </div>
                        <!-- chart end -->
                        <div class = "col-md-6">

                            <!-- Line chart -->
                            <div class="box box-primary">
                                <div class="box-header with-border">
                                    <i class="fa fa-bar-chart-o"></i>
                                    <h3 class="box-title">Moisture Value (%VWC)<%
                                            var d = new Date(createdAt); 
                                            var str = "";
                                            if(createdAt){
                                                str = d.getFullYear() + "-" + (d.getMonth() + 1 ) + "-" + d.getDate();
                                            }
                                        %>
                                            </h3><div class="box-tools pull-right"><%= str %></div>     
                                    <!--<button class="pull-right" id="value_download" name="value_download"><i class="fa fa-fw fa-download"></i>download</button> -->
                                </div>
                                <div class="box-body">
                                    <div id="moist-chartLegend" ></div>
                                    <div id="moist-chart" style="height: 300px;"></div>

                                </div>
                                <!-- /.box-body-->
                            </div>
                            <!-- /.box -->
                        </div>
                        <!-- chart end -->
                    <!--</div>

                    <div class="row"> -->
                        <div class="col-md-6">
                            <div class="box box-primary">
                                <div class="box-header with-border">
                                    <h3 class="box-title">최근 촬영 사진</h3>
                                    <div class="box-tools pull-right" id="camera-date"  style="height:300px">
                                        <%
                                            var d = new Date(createdAt); 
                                            var str = "";
                                            if(createdAt){
                                                str = d.getFullYear() + "-" + (d.getMonth() + 1 ) + "-" + d.getDate() + "-" + d.getHours() + "-" + d.getMinutes();
                                            }
                                        %>
                                            <%= str %>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    <div id="camera-info">
                                        <img style="height:300px"></img>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- / camera infomation -->
                    <!-- infomation -->
                    <!-- /.weather, camera widget -->
                </div>
            </div>
        <% include ../partials/footer.ejs %>
            <div class="control-sidebar-bg"></div>
        </div>
        <!-- /.content-wrapper -->
      
            <!-- /.control-sidebar -->
            <!-- Add the sidebar's background. This div must be placed
       immediately after the control sidebar -->
    </div>
    <% include ../partials/footer_graph_javascript.ejs %>
        <script>
            //var socket = io("http://http://192.168.0.34:5001/");
            /*
             * Custom Label formatter
             * ----------------------
             */
            function labelFormatter(label, series) {
                return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;">' +
                    label +
                    "<br>" +
                    Math.round(series.percent) +
                    "%</div>";
            }
            //날짜에서 시간과분만 추출
            function getDateFromJSON(str) {
                var date = new Date(str);
                var con_mindate = date.getMinutes();
                if((0<= con_mindate && con_mindate  <= 15 )){
                    date.setMinutes(00);
                    return (date.getHours()) + ':0' + date.getMinutes();
                } else if(( 45<= con_mindate && con_mindate<= 60))
                {
                    var date_time = date.getHours();
                    date.setHours(date_time + 1);
                    date.setMinutes(00);
                    return (date.getHours()) + ':0' + date.getMinutes();
                }else{
                    date.setMinutes(30);
                return (date.getHours()) + ':' + date.getMinutes();
                }  
            }
            //날짜에서 하루 빼기
            function getMinusOneDate(str) {
                var date = new Date(str);
                return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + (date.getDate() - 1);
            }
            //날짜 형식 변경
            function getFormatDate(date) {
                var year = date.getFullYear(); //yyyy
                var month = (1 + date.getMonth()); //M
                var day = date.getDate(); //d
                month = month >= 10 ? month : '0' + month; // month 두자리로 저장
                day = day >= 10 ? day : '0' + day; //day 두자리로 저장
                return year + '' + month + '' + day;
            }
            //시간말 추출
            function getFormatDateHour(date) {
                var hour = date.getHours(); //d
                hour = hour >= 10 ? hour : '0' + hour; //day 두자리로 저장
                return hour;
            }

            var ec_chart = {
                cnt: 0,
                chart:'',
                init: function (data) {
                    this.cnt = 1;
                    this.chart = $.plot("#ec-chart", data, {
                            grid: {
                                hoverable: true,
                                borderColor: "#f3f3f3",
                                borderWidth: 1,
                                tickColor: "#f3f3f3"
                            },
                            series: {
                                shadowSize: 0,
                                lines: {
                                    show: true
                                },
                                points: {
                                    show: true
                                }
                            },
                            lines: {
                                fill: false

                            },
                            yaxis: {

                                show: true
                            },
                            xaxis: {
                                // 이 설정은 x축의 보여지는 것이 날짜 기준으로 하기 위해서 있는 것이다.
                                mode: "categories",
                                show: true
                            },
                            legend: {
                                show: true,
                                noColumns: 0,
                                container: $("#ec-chartLegend")
                            }
                        });
                        //Initialize tooltip on hover
                        $('<div class="tooltip-inner" id="ec-chart-tooltip"></div>').css({
                            position: "absolute",
                            display: "none",
                            opacity: 0.8
                        }).appendTo("body");
                        
                        $("#ec-chart").bind("plothover", function(event, pos, item) {
                                
                            if (item) {
                                var x = item.datapoint[0].toFixed(2),
                                    y = item.datapoint[1].toFixed(2);
                                //$("#sensor-chart-tooltip").html(item.series.label + " of " + x + " = " + y)
                                $("#ec-chart-tooltip").html(item.series.label + " legend : " + y).css({
                                    top: item.pageY + 5,
                                    left: item.pageX + 5
                                }).fadeIn(200);
                            } else {
                                $("#ec-chart-tooltip").hide();
                            }
                        });           
                }
            };

            var moist_chart = {
                cnt: 0,
                chart:'',
                init: function (data) {
                    this.cnt = 1;
                    this.chart = $.plot("#moist-chart", data, {
                            grid: {
                                hoverable: true,
                                borderColor: "#f3f3f3",
                                borderWidth: 1,
                                tickColor: "#f3f3f3"
                            },
                            series: {
                                shadowSize: 0,
                                lines: {
                                    show: true
                                },
                                points: {
                                    show: true
                                }
                            },
                            lines: {
                                fill: false

                            },
                            yaxis: {

                                show: true
                            },
                            xaxis: {
                                // 이 설정은 x축의 보여지는 것이 날짜 기준으로 하기 위해서 있는 것이다.
                                mode: "categories",
                                show: true
                            },
                            legend: {
                                show: true,
                                noColumns: 0,
                                container: $("#moist-chartLegend")       
                            }
                        });
                        //Initialize tooltip on hover
                        $('<div class="tooltip-inner" id="moist-chart-tooltip"></div>').css({
                            position: "absolute",
                            display: "none",
                            opacity: 0.8
                        }).appendTo("body");
                        
                        $("#moist-chart").bind("plothover", function(event, pos, item) {
                                
                            if (item) {
                                var x = item.datapoint[0].toFixed(2),
                                    y = item.datapoint[1].toFixed(2);
                                //$("#sensor-chart-tooltip").html(item.series.label + " of " + x + " = " + y)
                                $("#moist-chart-tooltip").html(item.series.label + " legend : " + y).css({
                                    top: item.pageY + 5,
                                    left: item.pageX + 5
                                }).fadeIn(200);
                            } else {
                                $("#moist-chart-tooltip").hide();
                            }
                        });           
                }
            };

            var temp_chart = {
                cnt: 0,
                chart:'',
                init: function (data) {
                    this.cnt = 1;
                    this.chart = $.plot("#temp-chart", data, {
                            grid: {
                                hoverable: true,
                                borderColor: "#f3f3f3",
                                borderWidth: 1,
                                tickColor: "#f3f3f3"
                            },
                            series: {
                                shadowSize: 0,
                                lines: {
                                    show: true
                                },
                                points: {
                                    show: true
                                }
                            },
                            lines: {
                                fill: false

                            },
                            yaxis: {
                                show: true
                            },
                            xaxis: {
                                // 이 설정은 x축의 보여지는 것이 날짜 기준으로 하기 위해서 있는 것이다.
                                mode: "categories",
                                show: true
                            },
                            legend: {
                                show: true,
                                noColumns: 0,
                                container: $("#temp-chartLegend")       
                            }
                        });
                        //Initialize tooltip on hover
                        $('<div class="tooltip-inner" id="temp-chart-tooltip"></div>').css({
                            position: "absolute",
                            display: "none",
                            opacity: 0.8
                        }).appendTo("body");
                        
                        $("#temp-chart").bind("plothover", function(event, pos, item) {
                                
                            if (item) {
                                var x = item.datapoint[0].toFixed(2),
                                    y = item.datapoint[1].toFixed(2);
                                //$("#sensor-chart-tooltip").html(item.series.label + " of " + x + " = " + y)
                                $("#temp-chart-tooltip").html(item.series.label + " legend : " + y).css({
                                    top: item.pageY - 25,
                                    left: item.pageX - 25
                                }).fadeIn(200);
                            } else {
                                $("#temp-chart-tooltip").hide();
                            }
                        });           
                }
            };
            //limit 10 chart end

            /*
           //BAR CHART limit 3
            var bar = new Morris.Bar({
                element: 'bar-chart',
                resize: true,
                data: [{
                    y: '2006',
                    a: 100,
                    b: 90
                }, {
                    y: '2007',
                    a: 75,
                    b: 65
                }, {
                    y: '2008',
                    a: 50,
                    b: 40
                }, {
                    y: '2009',
                    a: 75,
                    b: 65
                }, {
                    y: '2010',
                    a: 50,
                    b: 40
                }, {
                    y: '2011',
                    a: 75,
                    b: 65
                }, {
                    y: '2012',
                    a: 100,
                    b: 90
                }],
                barColors: ['#00a65a', '#f56954'],
                xkey: 'y',
                ykeys: ['a', 'b'],
                labels: ['CPU', 'DISK'],
                hideHover: 'auto'
            });
        });
            */

            // chart end
            var get_Data = function() {
                $.ajax({
                    type: "GET",
                    url: "/ajax_get_data?serial_Num=<%=serial_Num%>",
                    dataType: "json",
                    error: function() {
                        var ajax_data;
                        ajax_data = null;
                    },
                    success: function(data) {
                        var chart_data;
                        //ajax_data = JSON.stringify(data);
                        chart_data = data;
                        var get_data = chart_data;

                        var ec_data = new Array();
                        var temp_data = new Array();
                        var moist_data = new Array();

                        for ( var i in data){   
                            var array1 = data[i].sd_data.split(','); 
                            for (var j in array1) {
                                if(i == 0 && j < 8){
                                    ec_data[j] = new Array();
                                    temp_data[j] = new Array();
                                    moist_data[j] = new Array();
                                }
                                if( j < 8 ){
                                    ec_data[j][i] = [getDateFromJSON(data[i].createdAt), array1[j]];
                                } else if( j < 16 ) {
                                    temp_data[j-8][i] = [getDateFromJSON(data[i].createdAt), array1[j]];
                                } else if( j < 24 ) {
                                    moist_data[j-16][i] = [getDateFromJSON(data[i].createdAt), array1[j]];
                                }
                            }
                        }

                        var color_arr = ["#000000","#FF0000","#00FF00","#0000FF","#FFFF00","#00FFFF","#FF00FF","#C0C0C0"];
                        var ec_data_line = new Array();
                        var temp_data_line = new Array();
                        var moist_data_line = new Array();
                        //ec data
                        for( var i = 0 ; i < ec_data.length; i++){
                            ec_data_line[i] = { data: ec_data[i].reverse(), color: color_arr[i] , label:(i+1)*10};
                        }
                        //temperature data
                        for( var i = 0 ; i < temp_data.length; i++){
                            temp_data_line[i] = { data: temp_data[i].reverse(), color: color_arr[i] , label:(i+1)*10};
                        }
                        //moisture data
                        for( var i = 0 ; i < moist_data.length; i++){
                            moist_data_line[i] = { data: moist_data[i].reverse(), color: color_arr[i] , label:(i+1)*10};
                        }


                        if(ec_chart.cnt == 0){
                            ec_chart.init(ec_data_line);
                            temp_chart.init(temp_data_line);
                            moist_chart.init(moist_data_line);
                        }else{
                            ec_chart.chart.setData(ec_data_line);
                            ec_chart.chart.setupGrid();
                            ec_chart.chart.draw();

                            moist_chart.chart.setData(moist_data_line);
                            moist_chart.chart.setupGrid();
                            moist_chart.chart.draw();

                            temp_chart.chart.setData(temp_data_line);
                            temp_chart.chart.setupGrid();
                            temp_chart.chart.draw();
                        }
                        //chart_grid(ec_data_line,ec_data_line,ec_data_line);
                    }
                });
            }

            // chart end
            var get_image = function() {
                $.ajax({
                    type: "GET",
                    url: "/ajax_get_images?serial_Num=<%=serial_Num%>",
                    dataType: "json",
                    error: function() {
                        var ajax_path;
                        ajax_path = '/images/failed/failed/failed.jpg';
                        //console.log(ajax_path);
                        $("#camera-info").find("img").attr("src", ajax_path);
                    },
                    success: function(data) {
                        var ajax_data = data;
                        var img_path;
                        var d = new Date(ajax_data.createdAt);
                        var dateStr = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes();

                        if (ajax_data.createdAt == "") dateStr = "";
                        img_path = '/images/' + ajax_data.si_serial + '/' + ajax_data.si_path + '/' + ajax_data.si_filename;
                        $("#camera-info").find("img").attr("src", img_path);
                        $("#camera-date").text(dateStr);
                    }
                });
            }
            get_Data();
            get_image();
            setInterval("get_Data()", 1000 * 60);
            setInterval("get_image()", 1000 * 60*30);
        </script>
   
</body>

</html>